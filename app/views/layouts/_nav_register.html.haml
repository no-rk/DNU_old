- abilities = current_user.result(:ability).where(:forget => false).includes(:ability).all

.sidebar-nav
  %ul.nav.nav-list
    %li.nav-header
      ENo.#{current_user.id}
    %li{:class => active_current(register_index_path)}
      %a{:href => register_index_path} 宣言トップ
    - unless Day.updating?
      %li.nav-header 行動設定
      - [:main, :trade, :product].each do |action|
        %li{:class => active_current(send("new_register_#{action}_path"))}
          %a{:href => send("new_register_#{action}_path")}= "Register::#{action.to_s.camelize}".constantize.model_name.human
      - if current_user.new_register_events.exists?
        %li.nav-header イベント
        - current_user.form_event_content_ids.each do |event_content_id|
          %li{:class => active_current(register_event_content_id_path(event_content_id))}
            %a{:href => register_event_content_id_path(event_content_id)}= GameData::EventContent.find(event_content_id).nickname
      %li.nav-header 戦闘設定
      - [:battle, :duel, :competition].each do |battle|
        %li{:class => active_current(send("new_register_#{battle}_path"))}
          %a{:href => send("new_register_#{battle}_path")}= "Register::#{battle.to_s.camelize}".constantize.model_name.human
      %li.nav-header 設定
      %li{:class => active_current(new_register_skill_path)}
        %a{:href => new_register_skill_path}= Register::Skill.model_name.human
      - if abilities.count > 0
        %li{:class => active_current(new_register_ability_path)}
          %a{:href => new_register_ability_path}= Register::Ability.model_name.human
        - abilities.each do |ability|
          %li{:class => active_current(register_ability_id_path(ability.ability_id))}
            %a{:href => register_ability_id_path(ability.ability_id)} └ #{ability.nickname}
      %li.nav-header 交流
      - [:message, :community, :character, :image].each do |exchange|
        %li{:class => active_current(send("new_register_#{exchange}_path"))}
          %a{:href => send("new_register_#{exchange}_path")}= "Register::#{exchange.to_s.camelize}".constantize.model_name.human
      - if current_user.creation_day.nil? or current_user.creation_day == Day.last_day_i
        %li.nav-header 初回登録
        %li{:class => active_current(new_register_initial_path)}
          %a{:href => new_register_initial_path}= Register::Initial.model_name.human
    %li.nav-header 履歴一覧
    %li
      = form_tag(register_history_path, :class => "no_diff select_submit") do
        = select_tag 'history[type]', options_for_select(I18n.t("options", :scope => "register.history"), :selected => select_current), :include_blank => true, :class => "span12"
/ /.well
