- i = 0
= form_battle.simple_fields_for :battle_settings, :wrapper => :simple, :defaults => { :as => (:plain if @read_only), :user => current_user } do |form_battle_setting|
  %br
  %br
  .controls.controls-row
    %span.label.label-success.span2 優先度
    = form_battle_setting.input :priority, :collection => (1..8).to_a.inject({}){ |h,v| h.tap{ h[v] = v } }, :selected => (i+1), :input_html => { :class => :'span2' }
  .controls.controls-row
    %span.label.span1 技
    = form_battle_setting.input :skill_id, :collection => @learned_skills, :input_html => { :class => :'span6' }, :error_class => :'error'
    = form_battle_setting.input :frequency, :collection => @frequencies, :selected => @selected_frequency, :input_html => { :'data-url' => help_path(:battle_settings), :'data-remote' => true, :'data-params' => "id=#{register_battle.battle_settings.try(:[], i).try(:[], :frequency).nil? ? @selected_frequency : register_battle.battle_settings[i][:frequency]}", :'data-type' => :json, :'data-help-path' => help_path(:battle_settings), :class => :'span2' }
  .controls.controls-row
    %span.label.span2 使用条件
    = form_battle_setting.input :use_condition, :collection => @use_conditions, :selected => @selected_use_condition, :input_html => { :'data-url' => help_path(:battle_settings), :'data-remote' => true, :'data-params' => "id=#{register_battle.battle_settings.try(:[], i).try(:[], :use_condition).nil? ? @selected_use_condition : register_battle.battle_settings[i][:use_condition]}", :'data-type' => :json, :'data-help-path' => help_path(:battle_settings), :class => :'span4' }
    %span.label.span1 (A)
    = form_battle_setting.input :use_condition_variable, :input_html => { :class => :'span2' }
  .controls.controls-row
    %span.label.span2 対象指定
    = form_battle_setting.input :target, :collection => @targets, :input_html => { :'data-url' => help_path(:battle_settings), :'data-remote' => true, :'data-params' => ("id=#{register_battle.battle_settings[i][:target]}" if register_battle.battle_settings.try(:[], i).try(:[], :target).present?), :'data-type' => :json, :'data-help-path' => help_path(:battle_settings), :class => :'span4' }
    %span.label.span1 (B)
    = form_battle_setting.input :target_variable, :input_html => { :class => :'span2' }
  .controls.controls-row
    = form_battle_setting.input :message, :wrapper => :bootstrap, :input_html => { :class => :'message span9', :rows => 5 }
  - i += 1
